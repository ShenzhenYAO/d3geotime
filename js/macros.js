function cat_r(ncases) {
    if (ncases > 200) { r = 20 }
    else if (ncases > 50) { r = 10 }
    else if (ncases > 10) { r = 5 }
    else { r = 2 }
    // console.log(r)
    return r;
}

function getrealdata() {
    var rawdata = [
        ["Hubei", "Mainland China", "1/26/2020 11:00 AM", "1058", "52", "42", "0", "30.5928", "114.3055"],
        ["Guangdong", "Mainland China", "1/26/2020 11:00 AM", "111", "0", "2", "0", "23.1291", "113.2644"],
        ["Zhejiang", "Mainland China", "1/26/2020 11:00 AM", "104", "0", "1", "0", "30.2741", "120.1551"],
        ["Henan", "Mainland China", "1/26/2020 11:00 AM", "83", "1", "0", "3", "34.7466", "113.6253"],
        ["Chongqing", "Mainland China", "1/26/2020 11:00 AM", "75", "0", "0", "0", "29.4316", "106.9123"],
        ["Hunan", "Mainland China", "1/26/2020 11:00 AM", "69", "0", "0", "0", "28.2282", "112.9388"],
        ["Beijing", "Mainland China", "1/26/2020 11:00 AM", "68", "0", "2", "0", "39.9042", "116.4074"],
        ["Anhui", "Mainland China", "1/26/2020 11:00 AM", "60", "0", "0", "4", "31.8206", "117.2272"],
        ["Shandong", "Mainland China", "1/26/2020 11:00 AM", "46", "0", "0", "0", "36.6512", "117.1201"],
        ["Sichuan", "Mainland China", "1/26/2020 11:00 AM", "44", "0", "0", "4", "30.5728", "104.0668"],
        ["Shanghai", "Mainland China", "1/26/2020 11:00 AM", "40", "1", "1", "72", "31.2304", "121.4737"],
        ["Guangxi", "Mainland China", "1/26/2020 11:00 AM", "36", "0", "0", "0", "32.0603", "118.7969"],
        ["Jiangxi", "Mainland China", "1/26/2020 11:00 AM", "36", "0", "0", "0", "28.6829", "115.8582"],
        ["Fujian", "Mainland China", "1/26/2020 11:00 AM", "35", "0", "0", "20", "26.0745", "119.2965"],
        ["Jiangsu", "Mainland China", "1/26/2020 11:00 AM", "33", "0", "1", "0", "32.0603", "118.7969"],
        ["Hainan", "Mainland China", "1/26/2020 11:00 AM", "22", "0", "0", "0", "20.0444", "110.1983"],
        ["Shaanxi", "Mainland China", "1/26/2020 11:00 AM", "22", "0", "0", "0", "34.3416", "108.9398"],
        ["Liaoning", "Mainland China", "1/26/2020 11:00 AM", "21", "0", "0", "0", "41.8057", "123.4315"],
        ["Yunnan", "Mainland China", "1/26/2020 11:00 AM", "16", "0", "0", "36", "24.8801", "102.8329"],
        ["Heilongjiang", "Mainland China", "1/26/2020 11:00 AM", "15", "1", "0", "0", "45.8038", "126.535"],
        ["Tianjin", "Mainland China", "1/26/2020 11:00 AM", "14", "0", "0", "0", "39.3434", "117.3616"],
        ["Hebei", "Mainland China", "1/26/2020 11:00 AM", "13", "1", "0", "0", "38.0428", "114.5149"],
        ["Shanxi", "Mainland China", "1/26/2020 11:00 AM", "9", "0", "0", "0", "37.8706", "112.5489"],
        ["Hong Kong", "Hong Kong", "1/26/2020 11:00 AM", "8", "0", "0", "244", "22.3193", "114.1694"],
        ["Inner Mongolia", "Mainland China", "1/26/2020 11:00 AM", "7", "0", "0", "0", "40.8424", "111.75"],
        ["Gansu", "Mainland China", "1/26/2020 11:00 AM", "7", "0", "0", "0", "36.0611", "103.8343"],
        ["Guizhou", "Mainland China", "1/26/2020 11:00 AM", "5", "0", "0", "0", "26.6477", "106.6302"],
        ["Macau", "Macau", "1/26/2020 11:00 AM", "5", "0", "0", "0", "22.1987", "113.5439"],
        ["Ningxia", "Mainland China", "1/26/2020 11:00 AM", "4", "0", "0", "0", "38.4872", "106.2309"],
        ["Jilin", "Mainland China", "1/26/2020 11:00 AM", "4", "0", "0", "0", "43.8171", "125.3235"],
        ["Taiwan", "Taiwan", "1/26/2020 11:00 AM", "4", "0", "0", "0", "25.033", "121.5654"],
        ["Xinjiang", "Mainland China", "1/26/2020 11:00 AM", "4", "0", "0", "0", "43.8256", "87.6168"],
        ["Qinghai", "Mainland China", "1/26/2020 11:00 AM", "1", "0", "0", "0", "36.6171", "101.7782"],
        ["Washington", "US", "1/26/2020 11:00 AM", "1", "0", "0", "0", "47.7511", "-120.74"],
        ["Illinois", "US", "1/26/2020 11:00 AM", "1", "0", "0", "0", "40.6331", "-89.3985"],
        ["California", "US", "1/26/2020 11:00 AM", "1", "0", "0", "0", "36.7783", "-119.417"],
        ["Tokyo", "Japan", "1/26/2020 11:00 AM", "4", "0", "1", "0", "35.6762", "139.6503"],
        ["Bankok", "Thailand", "1/26/2020 11:00 AM", "8", "0", "2", "0", "13.7563", "100.5018"],
        ["Seoul", "South Korea", "1/26/2020 11:00 AM", "3", "0", "0", "0", "37.5665", "126.978"],
        ["Singapore", "Singapore", "1/26/2020 11:00 AM", "4", "0", "0", "0", "1.3521", "103.8198"],
        ["Hanoi", "Vietnam", "1/26/2020 11:00 AM", "2", "0", "0", "0", "21.0278", "105.8342"],
        ["Paris", "France", "1/26/2020 11:00 AM", "3", "0", "0", "0", "48.8566", "2.3522"],
        ["Melbourne", "Australia", "1/26/2020 11:00 AM", "4", "0", "0", "0", "-37.8136", "144.9631"],
        ["Kathmandu", "Nepal", "1/26/2020 11:00 AM", "1", "0", "0", "0", "27.7172", "85.324"],
        ["Kuala Lumpur", "Malaysia", "1/26/2020 11:00 AM", "4", "0", "0", "0", "3.139", "101.6869"],
        ["Ontario", "Canada", "1/26/2020 11:00 AM", "1", "0", "0", "0", "43.6532", "-79.3832"]

    ];

    var realdata = {};
    realdata['objects']=[];
    rawdata.forEach(d => {
        var tmp = {};
        tmp['data']= [parseFloat(d[7]), parseFloat(d[8]), parseInt(d[3]), parseInt(d[4]), 
            parseInt(d[5]), parseInt(d[6]), d[0], d[1], d[2]];
        realdata['objects'].push(tmp);
    })
    // console.log(realdata)
    return realdata;
}// end getrealdata